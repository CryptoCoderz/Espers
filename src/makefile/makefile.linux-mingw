# Copyright (c) 2009-2010 Satoshi Nakamoto
# Distributed under the MIT/X11 software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

TARGET_PLATFORM:=i686
#TARGET_PLATFORM:=x86_64

DEPSDIR:=/usr/$(TARGET_PLATFORM)-w64-mingw32
CC:=$(TARGET_PLATFORM)-w64-mingw32-gcc
CXX:=$(TARGET_PLATFORM)-w64-mingw32-g++
RANLIB=$(TARGET_PLATFORM)-w64-mingw32-ranlib
STRIP=$(TARGET_PLATFORM)-w64-mingw32-strip

USE_UPNP:=0
USE_WALLET:=1

INCLUDEPATHS= \
 -I"$(CURDIR)" \
 -I"$(CURDIR)"/obj \
 -I"$(DEPSDIR)/boost_1_55_0" \
 -I"$(DEPSDIR)/db-6.0.20/build_unix" \
 -I"$(DEPSDIR)/openssl-1.0.1f/include" \
 -I"$(DEPSDIR)"

LIBPATHS= \
 -L"$(DEPSDIR)/boost_1_55_0/stage/lib" \
 -L"$(DEPSDIR)/db-6.0.20/build_unix" \
 -L"$(DEPSDIR)/openssl-1.0.1f"

LIBS= \
 -l boost_system-mt \
 -l boost_filesystem-mt \
 -l boost_program_options-mt \
 -l boost_thread_win32-mt \
 -l boost_chrono-mt \
 -l db_cxx \
 -l ssl \
 -l crypto \
 -l z

DEFS=-D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE
DEBUGFLAGS=-g
CFLAGS=-O2 -msse2 -w -Wall -Wextra -Wno-ignored-qualifiers -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)
LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat -static-libgcc -static-libstdc++

ifndef USE_UPNP
	override USE_UPNP = -
endif
ifneq (${USE_UPNP}, -)
	LIBPATHS += -L"$(DEPSDIR)/miniupnpc"
	LIBS += -l miniupnpc -l iphlpapi
	DEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)
endif

LIBS += -l mingwthrd -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi

# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
HEADERS = $(wildcard *.h)

OBJS= \
    leveldb/libleveldb.a \
    obj/node/alert.o \
    obj/consensus/version.o \
    obj/consensus/checkpoints.o \
    obj/node/netbase.o \
    obj/node/addrman.o \
    obj/subcore/crypter.o \
    obj/subcore/key.o \
    obj/util/init.o \
    obj/daemon/bitcoind.o \
    obj/subcore/keystore.o \
    obj/core/chain.o \
    obj/core/main.o \
    obj/node/net.o \
    obj/subcore/protocol.o \
    obj/consensus/velocity.o \
    obj/rpc/rpcvelocity.o \
    obj/rpc/rpcclient.o \
    obj/rpc/rpcprotocol.o \
    obj/rpc/rpcserver.o \
    obj/rpc/rpcmisc.o \
    obj/rpc/rpcnet.o \
    obj/rpc/rpcblockchain.o \
    obj/rpc/rpcrawtransaction.o \
    obj/xnode/xnoderpc.o \
    obj/subcore/timedata.o \
    obj/subcore/script.o \
    obj/core/sync.o \
    obj/subcore/txmempool.o \
    obj/core/blocksizecalculator.o \
    obj/util/util.o \
    obj/subcore/hash.o \
    obj/subcore/noui.o \
    obj/consensus/kernel.o \
    obj/primitives/base58.o \
    obj/primitives/pbkdf2.o \
    obj/consensus/fork.o \
    obj/crypto/scrypt/scrypt.o \
    obj/crypto/scrypt/scrypt-arm.o \
    obj/crypto/scrypt/scrypt-x86.o \
    obj/crypto/scrypt/scrypt-x86_64.o \
    obj/core/chainparams.o \
    obj/core/blockparams.o \
    obj/crypto/common/blake.o\
    obj/crypto/common/bmw.o\
    obj/crypto/common/groestl.o\
    obj/crypto/common/jh.o\
    obj/crypto/common/keccak.o\
    obj/crypto/common/skein.o\
    obj/crypto/common/cubehash.o \
    obj/crypto/common/luffa.o \
    obj/crypto/common/aes_helper.o \
    obj/crypto/common/echo.o \
    obj/crypto/common/shavite.o \
    obj/crypto/common/simd.o \
    obj/crypto/common/hamsi.o \
    obj/crypto/common/fugue.o \
    obj/crypto/common/shabal.o \
    obj/crypto/common/whirlpool.o \
    obj/crypto/common/haval.o \
    obj/crypto/common/sha2big.o \
    obj/xnode/xnodecomponent.o \
    obj/xnode/xnodemngr.o \
    obj/xnode/xnodereward.o \
    obj/xnode/xnodesettings.o \
    obj/xnode/xnodestart.o \
    obj/xnode/xnodesync.o \
    obj/xnode/xnodecrypter.o \
    obj/fractal/fractalcontract.o \
    obj/fractal/fractaldataob.o \
    obj/fractal/fractalengine.o \
    obj/fractal/fractalnftbase.o \
    obj/fractal/fractalnft.o \
    obj/fractal/fractalparams.o

ifeq (${USE_WALLET}, 1)
    DEFS += -DENABLE_WALLET
    OBJS += \
        obj/database/db.o \
        obj/consensus/miner.o \
        obj/rpc/rpcdump.o \
        obj/rpc/rpcmining.o \
        obj/rpc/rpcwallet.o \
        obj/core/wallet.o \
        obj/database/walletdb.o
endif

all: Espersd.exe

LIBS += $(CURDIR)/leveldb/libleveldb.a $(CURDIR)/leveldb/libmemenv.a
DEFS += -I"$(CURDIR)/leveldb/include"
DEFS += -I"$(CURDIR)/leveldb/helpers"
OBJS += obj/database/txdb-leveldb.o
leveldb/libleveldb.a:
	@echo "Building LevelDB ..." && cd leveldb && CC=$(CC) CXX=$(CXX) TARGET_OS=OS_WINDOWS_CROSSCOMPILE CXXFLAGS="-I$(INCLUDEPATHS)" LDFLAGS="-L$(LIBPATHS)" $(MAKE) libleveldb.a libmemenv.a && $(RANLIB) libleveldb.a && $(RANLIB) libmemenv.a && cd ..;
obj/txdb-leveldb.o: leveldb/libleveldb.a

obj/build.h: FORCE
	/bin/sh ../share/genbuild.sh obj/build.h
consensus/version.cpp: obj/build.h
DEFS += -DHAVE_BUILD_INFO

obj/%.o: %.cpp %.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -o $@ $<

Espersd.exe: $(OBJS:obj/%=obj/%)
	$(CXX) $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS) -lshlwapi
	$(STRIP) Espersd.exe

obj/crypto/scrypt/scrypt-x86.o: crypto/scrypt/scrypt-x86.S
	$(CXX) -c $(CFLAGS) -MMD -o $@ $<

obj/crypto/scrypt/scrypt-x86_64.o: crypto/scrypt/scrypt-x86_64.S
	$(CXX) -c $(CFLAGS) -MMD -o $@ $<

clean:
	-rm -f obj/*.o
	-rm -f Espersd.exe
	-rm -f obj/build.h
	cd leveldb && TARGET_OS=OS_WINDOWS_CROSSCOMPILE $(MAKE) clean && cd ..;

FORCE:
